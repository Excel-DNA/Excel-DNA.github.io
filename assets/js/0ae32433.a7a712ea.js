"use strict";(self.webpackChunkexcel_dna=self.webpackChunkexcel_dna||[]).push([[7634],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6321:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={title:"Excel-DNA version 0.34",date:"2017-05-31 01:12:00 -0000",authors:"govert"},i=void 0,l={permalink:"/TestDocs/blog/2017/05/31/excel-dna-0-34-final-testing",source:"@site/blog/2017-05-31-excel-dna-0-34-final-testing.md",title:"Excel-DNA version 0.34",description:"Excel-DNA version 0.34 has been released and is now available.",date:"2017-05-31T01:12:00.000Z",formattedDate:"May 31, 2017",tags:[],readingTime:1.52,hasTruncateMarker:!1,authors:[{name:"Govert van Drimmelen",url:"https://github.com/Excel-DNA",imageURL:"https://avatars.githubusercontent.com/u/414659",key:"govert"}],frontMatter:{title:"Excel-DNA version 0.34",date:"2017-05-31 01:12:00 -0000",authors:"govert"},prevItem:{title:"Develop Excel Conference \u2013 London, 18 October 2018",permalink:"/TestDocs/blog/2018/09/21/develop-excel-conference"},nextItem:{title:"Excel UDF IntelliSense for Excel-DNA and VBA",permalink:"/TestDocs/blog/2016/11/24/excel-udf-intellisense-for-excel-dna-and-vba"}},p={authorsImageUrls:[void 0]},s=[],c={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Excel-DNA version 0.34 has been released and is now available."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"on NuGet (as package ExcelDna.Addin 0.34.6), and"),(0,r.kt)("li",{parentName:"ul"},"as a standalone download from GitHub (",(0,r.kt)("a",{parentName:"li",href:"https://github.com/Excel-DNA/ExcelDna/releases/tag/v0.34.6"},"https://github.com/Excel-DNA/ExcelDna/releases/tag/v0.34.6"),").")),(0,r.kt)("p",null,"Please post any issues you run into to the Google group (",(0,r.kt)("a",{parentName:"p",href:"https://groups.google.com/forum/#!forum/exceldna"},"https://groups.google.com/forum/#!forum/exceldna"),")"),(0,r.kt)("p",null,"The easiest way to test the new version is by installing (or upgrading to) the ",(0,r.kt)("inlineCode",{parentName:"p"},"ExcelDna.AddIn")," NuGet package."),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Excel-DNA version 0.34 introduces a much improved build procedure for add-ins created using the NuGet package (thanks to a fantastic work by ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/caioproiete"},"@caioproiete"),"!)"),(0,r.kt)("p",null,"This replaces the error-prone post-build steps we had with a custom build helper and allows easier build output customization (see ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Excel-DNA/ExcelDna/wiki/Build-Output-Customization"},"https://github.com/Excel-DNA/ExcelDna/wiki/Build-Output-Customization"),")."),(0,r.kt)("p",null,"Various bug fixes and smaller improvements are also included in this version:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},'ExplicitExports="false"')," to NuGet .dna file template"),(0,r.kt)("li",{parentName:"ul"},"Fix getting ",(0,r.kt)("inlineCode",{parentName:"li"},"Application")," from ",(0,r.kt)("inlineCode",{parentName:"li"},"ProtectedViewWindow")),(0,r.kt)("li",{parentName:"ul"},"Add attempts to get ",(0,r.kt)("inlineCode",{parentName:"li"},"Application")," object from all windows of class ",(0,r.kt)("inlineCode",{parentName:"li"},"EXCEL7"),"."),(0,r.kt)("li",{parentName:"ul"},"Fix ",(0,r.kt)("inlineCode",{parentName:"li"},"ExcelAsyncUtil.Observe")," re-open restart - broken by other fixes in the previous version. Add option to not restart."),(0,r.kt)("li",{parentName:"ul"},"Change ",(0,r.kt)("inlineCode",{parentName:"li"},"ExcelRtdServer.ConnectData")," to be more careful about raising an update notice. Calls to ",(0,r.kt)("inlineCode",{parentName:"li"},"Topic.UpdateNotify")," during the ",(0,r.kt)("inlineCode",{parentName:"li"},"ConnectData")," overload are now always ignored. If the topic value is updated (through ",(0,r.kt)("inlineCode",{parentName:"li"},"Topic.UpdateValue"),") during ConnectData, and the same value is returned from ConnectData, then no spurious ",(0,r.kt)("inlineCode",{parentName:"li"},"UpdateNotify")," is raised. If the value returned from ",(0,r.kt)("inlineCode",{parentName:"li"},"ConnectData")," differs from ",(0,r.kt)("inlineCode",{parentName:"li"},"Topic.Value"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"UpdateNotify")," will still be raised."),(0,r.kt)("li",{parentName:"ul"},"Allow ",(0,r.kt)("inlineCode",{parentName:"li"},"AccessViolation")," exceptions to be caught under .NET 4.0 - change marshaling wrapper from ",(0,r.kt)("inlineCode",{parentName:"li"},"DynamicMethod")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"MethodBuilder"),"."),(0,r.kt)("li",{parentName:"ul"},"Fix ",(0,r.kt)("inlineCode",{parentName:"li"},"QueueAsMacro")," failure after paste live preview."),(0,r.kt)("li",{parentName:"ul"},"Fix ",(0,r.kt)("inlineCode",{parentName:"li"},"AssemblyResolve")," re-entrancy race condition.")),(0,r.kt)("hr",null),(0,r.kt)("p",null,"To make a donation to the project, or to arrange for a corporate support agreement that lets you ensure Excel-DNA will live on, please visit the ",(0,r.kt)("a",{parentName:"p",href:"/#support"},"Excel-DNA Support")," page."),(0,r.kt)("p",null,"Thank you for your continued support and enthusiasm towards the Excel-DNA project!"))}u.isMDXComponent=!0}}]);