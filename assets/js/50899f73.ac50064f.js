"use strict";(self.webpackChunkexcel_dna=self.webpackChunkexcel_dna||[]).push([[6071],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>f});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},c=Object.keys(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var o=a.createContext({}),x=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},s=function(e){var n=x(e.components);return a.createElement(o.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,c=e.originalType,o=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=x(t),p=l,f=d["".concat(o,".").concat(p)]||d[p]||u[p]||c;return t?a.createElement(f,r(r({ref:n},s),{},{components:t})):a.createElement(f,r({ref:n},s))}));function f(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var c=t.length,r=new Array(c);r[0]=p;var i={};for(var o in n)hasOwnProperty.call(n,o)&&(i[o]=n[o]);i.originalType=e,i[d]="string"==typeof e?e:l,r[1]=i;for(var x=2;x<c;x++)r[x]=t[x];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8428:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>x});var a=t(7462),l=(t(7294),t(3905));const c={title:"Excel-DNA properties in SDK-style project files"},r=void 0,i={unversionedId:"guides-basic/sdk-style-project-properties",id:"guides-basic/sdk-style-project-properties",title:"Excel-DNA properties in SDK-style project files",description:"The following project properties are recognized by the Excel-DNA build task, and can be used to customize the build output.",source:"@site/docs/guides-basic/sdk-style-project-properties.md",sourceDirName:"guides-basic",slug:"/guides-basic/sdk-style-project-properties",permalink:"/docs/guides-basic/sdk-style-project-properties",draft:!1,tags:[],version:"current",frontMatter:{title:"Excel-DNA properties in SDK-style project files"},sidebar:"tutorialSidebar",previous:{title:"Optional Parameters and Default Values",permalink:"/docs/guides-basic/optional-parameters-and-default-values"},next:{title:"Updating Project File to SDK-Style",permalink:"/docs/guides-basic/updating-project-file-to-sdk-style"}},o={},x=[],s={toc:x},d="wrapper";function u(e){let{components:n,...t}=e;return(0,l.kt)(d,(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The following project properties are recognized by the Excel-DNA build task, and can be used to customize the build output.\nBy setting the appropriate properties, the old-style project .dna files are no longer needed when using SDK-style project files.\nAs part of the build, if no .dna file is present in the project, the required .dna files will be created as build outputs, using the project properties."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"  <PropertyGroup>\n    \n    \x3c!-- Base path to ExcelDna.AddIn.Tasks.dll, ExcelDnaPack.exe and ExcelDna.xll. --\x3e\n    \x3c!-- Default value: ..\\tools --\x3e\n    <ExcelDnaToolsPath></ExcelDnaToolsPath>\n\n    \x3c!-- Path to ExcelDnaPack.exe. --\x3e\n    \x3c!-- Default value: $(ExcelDnaTasksPath)ExcelDnaPack.exe --\x3e\n    <ExcelDnaPackExePath></ExcelDnaPackExePath>\n\n    \x3c!-- Base path for .props location. --\x3e\n    \x3c!-- Default value: $(MSBuildProjectDirectory) --\x3e\n    <ExcelDnaProjectPath></ExcelDnaProjectPath>\n\n    \x3c!-- Path for configuration properties file location.  --\x3e\n    \x3c!-- Default value: $(ExcelDnaProjectPath)\\Properties\\ExcelDna.Build.props --\x3e\n    <ExcelDnaPropsFilePath></ExcelDnaPropsFilePath>\n\n    \x3c!-- Enables creating executable Excel profile in launchSettings.json.  --\x3e\n    \x3c!-- Default value: true --\x3e\n    <RunExcelDnaSetDebuggerOptions></RunExcelDnaSetDebuggerOptions>\n\n    \x3c!-- Enables creating executable Excel profile in launchSettings.json when building from a command line or alternative IDE.  --\x3e\n    \x3c!-- Default value: false --\x3e\n    <RunExcelDnaSetDebuggerOptionsOutsideVisualStudio></RunExcelDnaSetDebuggerOptionsOutsideVisualStudio>\n\n    \x3c!-- Enables removing .dna, .xll from the build output folder on Build Clean. --\x3e\n    \x3c!-- Default value: true --\x3e\n    <RunExcelDnaClean></RunExcelDnaClean>\n\n    \x3c!-- Enables copying .dna, .xll to the build output folder on Build.  --\x3e\n    \x3c!-- Default value: true --\x3e\n    <RunExcelDnaBuild></RunExcelDnaBuild>\n\n    \x3c!-- Enables creating packed add-in on Build. --\x3e\n    \x3c!-- Default value: true --\x3e\n    <RunExcelDnaPack></RunExcelDnaPack>\n\n    \x3c!-- Enables to have an .xll file with no packed assemblies in it. --\x3e\n    \x3c!-- Default value: false --\x3e\n    <ExcelDnaUnpack></ExcelDnaUnpack>\n\n    \x3c!-- The output directory for the 'published' add-in. Use %none% to put the files in the same output directory. --\x3e\n    \x3c!-- Default value: publish for SDK-style projects, %none% for old-style projects --\x3e\n    <ExcelDnaPublishPath></ExcelDnaPublishPath>\n\n    \x3c!-- Enables creating 32bit add-in. --\x3e\n    \x3c!-- Default value: true --\x3e\n    <ExcelDnaCreate32BitAddIn></ExcelDnaCreate32BitAddIn>\n\n    \x3c!-- Enables creating 64bit add-in. --\x3e\n    \x3c!-- Default value: true --\x3e\n    <ExcelDnaCreate64BitAddIn></ExcelDnaCreate64BitAddIn>\n\n    \x3c!-- 32bit add-in name suffix. --\x3e\n    \x3c!-- Default value: none --\x3e\n    <ExcelDna32BitAddInSuffix></ExcelDna32BitAddInSuffix>\n\n    \x3c!-- 64bit add-in name suffix. Use %none% for no suffix. --\x3e\n    \x3c!-- Default value: 64 --\x3e\n    <ExcelDna64BitAddInSuffix></ExcelDna64BitAddInSuffix>\n\n    \x3c!-- Packed add-in name suffix.  Use %none% to make the name of the packed output file be the same as the unpacked name. --\x3e\n    \x3c!-- Default value: -packed --\x3e\n    <ExcelDnaPackXllSuffix></ExcelDnaPackXllSuffix>\n\n    \x3c!-- Explicit 32bit output file name --\x3e\n    \x3c!-- Default value: empty --\x3e\n    <ExcelDnaPack32BitXllName></ExcelDnaPack32BitXllName>\n\n    \x3c!-- Explicit 64bit output file name --\x3e\n    \x3c!-- Default value: empty --\x3e\n    <ExcelDnaPack64BitXllName></ExcelDnaPack64BitXllName>\n\n    \x3c!-- Enables packed add-in compression. --\x3e\n    \x3c!-- Default value: true --\x3e\n    <ExcelDnaPackCompressResources></ExcelDnaPackCompressResources>\n\n    \x3c!-- Enables multithreaded add-in packing. --\x3e\n    \x3c!-- Default value: true --\x3e\n    <ExcelDnaPackRunMultithreaded></ExcelDnaPackRunMultithreaded>\n\n    \x3c!-- Enables cross-platform resource packing implementation when executing on Windows. --\x3e\n    \x3c!-- Default value: false --\x3e\n    <ExcelDnaPackManagedResourcePackingOnWindows></ExcelDnaPackManagedResourcePackingOnWindows>\n\n    \x3c!-- Enables packing native libraries from .deps.json. --\x3e\n    \x3c!-- Default value: true --\x3e\n    <ExcelDnaPackNativeLibraryDependencies></ExcelDnaPackNativeLibraryDependencies>\n\n    \x3c!-- Enables packing managed assemblies from .deps.json. --\x3e\n    \x3c!-- Default value: true --\x3e\n    <ExcelDnaPackManagedDependencies></ExcelDnaPackManagedDependencies>\n\n    \x3c!-- Semicolon separated file names list to not pack from .deps.json. --\x3e\n    \x3c!-- Default value: empty --\x3e\n    <ExcelDnaPackExcludeDependencies></ExcelDnaPackExcludeDependencies>\n\n    \x3c!-- EXCEL.EXE path for debugging. --\x3e\n    \x3c!-- Default value: auto detect --\x3e\n    <ExcelDnaExcelExePath></ExcelDnaExcelExePath>\n\n    \x3c!-- Add-in file name for debugging. --\x3e\n    \x3c!-- Default value: auto detect --\x3e\n    <ExcelDnaAddInForDebugging></ExcelDnaAddInForDebugging>\n\n    \x3c!-- Add-in name for output files. --\x3e\n    \x3c!-- Default value: $(ProjectName)-AddIn --\x3e\n    <ExcelAddInFileName></ExcelAddInFileName>\n\n    \x3c!-- DnaLibrary Name in .dna. --\x3e\n    \x3c!-- Default value: $(ProjectName) Add-In --\x3e\n    <ExcelAddInName></ExcelAddInName>\n\n    \x3c!-- Semicolon separated references list to include in .dna. --\x3e\n    \x3c!-- Default value: empty --\x3e\n    <ExcelAddInInclude></ExcelAddInInclude>\n\n    \x3c!-- Semicolon separated external libraries to include in .dna. --\x3e\n    \x3c!-- Default value: empty --\x3e\n    <ExcelAddInExports></ExcelAddInExports>\n\n    \x3c!-- ExternalLibrary Path in .dna. --\x3e\n    \x3c!-- Default value: $(TargetFileName) --\x3e\n    <ExcelAddInExternalLibraryPath></ExcelAddInExternalLibraryPath>\n\n    \x3c!-- Enable/disable including pdb files in packed add-in. --\x3e\n    \x3c!-- Default value: false --\x3e\n    <ExcelAddInIncludePdb></ExcelAddInIncludePdb>\n\n    \x3c!-- Control whether the add-in's assemblies are loaded directly from byte arrays under .NET Framework. --\x3e\n    \x3c!-- Default value: true --\x3e\n    <ExcelAddInLoadFromBytes></ExcelAddInLoadFromBytes>\n\n    \x3c!-- Enable/disable collectible AssemblyLoadContext for .NET 6. --\x3e\n    \x3c!-- Default value: false --\x3e\n    <ExcelAddInDisableAssemblyContextUnload></ExcelAddInDisableAssemblyContextUnload>\n\n    \x3c!-- Path to TlbExp.exe. E.g. \"c:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\x64\\TlbExp.exe\" or $(MSBuildProjectDirectory)\\TlbExp.exe.--\x3e\n    \x3c!-- Default value: empty --\x3e\n    <ExcelAddInTlbExp></ExcelAddInTlbExp>\n\n    \x3c!-- Enable/disable .tlb file creation. --\x3e\n    \x3c!-- Default value: false --\x3e\n    <ExcelAddInTlbCreate></ExcelAddInTlbCreate>\n\n    \x3c!-- Path to signtool.exe. E.g. \"c:\\Program Files\\Microsoft SDKs\\Windows\\8.1\\bin\\x64\\signtool.exe\" or $(MSBuildProjectDirectory)\\signtool.exe --\x3e\n    \x3c!-- Default value: empty --\x3e\n    <ExcelAddInSignTool></ExcelAddInSignTool>\n\n    \x3c!-- Options for signtool.exe. E.g. /f \"$(MSBuildProjectDirectory)\\Contoso.pfx\" /p 12345678 --\x3e\n    \x3c!-- Default value: empty --\x3e\n    <ExcelAddInSignOptions></ExcelAddInSignOptions>\n\n    \x3c!-- Replace XLL version information with data read from ExternalLibrary assembly. --\x3e\n    \x3c!-- Default value: false --\x3e\n    <ExcelAddInUseVersionAsOutputVersion></ExcelAddInUseVersionAsOutputVersion>\n\n    \x3c!-- Prevents every static public function from becomming a UDF, they will need an explicit [ExcelFunction] annotation. --\x3e\n    \x3c!-- Default value: false --\x3e\n    <ExcelAddInExplicitExports></ExcelAddInExplicitExports>\n\n    \x3c!-- Prevents automatic registration of functions and commands. --\x3e\n    \x3c!-- Default value: false --\x3e\n    <ExcelAddInExplicitRegistration></ExcelAddInExplicitRegistration>\n\n    \x3c!-- Enable/disable COM Server support. --\x3e\n    \x3c!-- Default value: false --\x3e\n    <ExcelAddInComServer></ExcelAddInComServer>\n\n    \x3c!-- We don't need the extra 'ref' directory and reference assemblies for the Excel add-in --\x3e\n    <ProduceReferenceAssembly>false</ProduceReferenceAssembly>\n\n    \x3c!-- We need all dependencies to be copied to the output directory, as-if we are an 'application' and not a 'library'. This property also sets the CopyLockFileAssemblies property to true. --\x3e\n    <EnableDynamicLoading>true</EnableDynamicLoading>\n    \n  </PropertyGroup>\n\n")))}u.isMDXComponent=!0}}]);