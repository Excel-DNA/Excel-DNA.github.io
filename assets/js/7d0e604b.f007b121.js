"use strict";(self.webpackChunkexcel_dna=self.webpackChunkexcel_dna||[]).push([[8879],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=d(n),m=o,f=p["".concat(l,".").concat(m)]||p[m]||c[m]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var d=2;d<a;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5369:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=n(7462),o=(n(7294),n(3905));const a={title:"Moving to .NET 7 and Above"},i=void 0,s={unversionedId:"guides-basic/moving-to-dotnet7-and-above",id:"guides-basic/moving-to-dotnet7-and-above",title:"Moving to .NET 7 and Above",description:"The Excel-DNA solution currently supports .NET 6 and .NET Framework 4.x. The rationale behind the decision of not targeting .NET 7 and above at this stage is due to the restriction that the .NET Core series of runtimes imposes. To put simply, the restriction allows only a single version of the runtime to be loaded in a process (see GitHub issue).",source:"@site/docs/guides-basic/moving-to-dotnet7-and-above.md",sourceDirName:"guides-basic",slug:"/guides-basic/moving-to-dotnet7-and-above",permalink:"/docs/guides-basic/moving-to-dotnet7-and-above",draft:!1,tags:[],version:"current",frontMatter:{title:"Moving to .NET 7 and Above"},sidebar:"tutorialSidebar",previous:{title:"Installing Your Add-in",permalink:"/docs/guides-basic/installing-your-add-in"},next:{title:"Optional Parameters and Default Values",permalink:"/docs/guides-basic/optional-parameters-and-default-values"}},l={},d=[],u={toc:d};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The Excel-DNA solution currently supports .NET 6 and .NET Framework 4.x. The rationale behind the decision of not targeting .NET 7 and above at this stage is due to the restriction that the .NET Core series of runtimes imposes. To put simply, the restriction allows only a single version of the runtime to be loaded in a process (see ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/dotnet/runtime/issues/53729"},"GitHub issue"),")."),(0,o.kt)("p",null,"In other words, an add-in that is targeting .NET 6 cannot run alongside an add-on that is targeting .NET 7. For example, if a .NET 7 add-in is loaded first, none of the .NET 6 add-ins can run and vice-versa. However, it is important to note that .NET Core (e.g. .NET 6) and .NET Framework 4.x can work side by side.  "),(0,o.kt)("p",null,"For .NET 8+, there exists an improved support for precompiling add-ins to native code using the ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/dotnet/core/deploying/native-aot/"},".NET NativeAOT feature"),".\nIn theory, it could be possible to make a .NET 8 add-in that is compiled using NativeAOT, and load it alongside an add-in targeting .NET 6. However, NativeAOT has various restrictions around which APIs and libraries are supported, and only experimental COM support."),(0,o.kt)("p",null,"From Excel-DNA's perspective, it would require a substantial effort to support NativeAOT, and so the timing would depend on the support and sponsorship the project receives from its remarkable user-base. As a result, it is highly recommended to stay on .NET 6 for the foreseeable future."),(0,o.kt)("p",null,"Potential solutions that could be useful are:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Use dependencies that multi-target both .NET 6 and .NET 7+."),(0,o.kt)("li",{parentName:"ol"},"Develop an out-of-process model, using a proxy add-in that is targeting .NET Framework or .NET 6 in the process, and marshal to an external process that hosts the .NET 7 add-in.")))}c.isMDXComponent=!0}}]);