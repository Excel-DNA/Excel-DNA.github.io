"use strict";(self.webpackChunkexcel_dna=self.webpackChunkexcel_dna||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/docs/introduction","docId":"introduction"},{"type":"link","label":"Getting Started","href":"/docs/getting-started","docId":"getting-started"},{"type":"category","label":"Guides - Basic","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Excel Programming Interfaces","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/docs/guides-basic/excel-programming-interfaces/introduction","docId":"guides-basic/excel-programming-interfaces/introduction"},{"type":"link","label":"Using the Excel COM Automation Interfaces","href":"/docs/guides-basic/excel-programming-interfaces/using-the-excel-com-automation-interfaces","docId":"guides-basic/excel-programming-interfaces/using-the-excel-com-automation-interfaces"},{"type":"link","label":"Excel C API","href":"/docs/guides-basic/excel-programming-interfaces/excel-c-api","docId":"guides-basic/excel-programming-interfaces/excel-c-api"}],"href":"/docs/category/excel-programming-interfaces"},{"type":"link","label":"IntelliSense","href":"/docs/guides-basic/Intellisense","docId":"guides-basic/Intellisense"},{"type":"link","label":"Accepting Range Parameters in UDFs","href":"/docs/guides-basic/accepting-range-parameters-in-udfs","docId":"guides-basic/accepting-range-parameters-in-udfs"},{"type":"link","label":"Asynchronous Functions","href":"/docs/guides-basic/asynchronous-functions","docId":"guides-basic/asynchronous-functions"},{"type":"link","label":"Creating a Help File","href":"/docs/guides-basic/creating-a-help-file","docId":"guides-basic/creating-a-help-file"},{"type":"link","label":"Customizing Ribbons","href":"/docs/guides-basic/customizing-ribbons","docId":"guides-basic/customizing-ribbons"},{"type":"link","label":".NET runtime support","href":"/docs/guides-basic/dotnet-runtime-support","docId":"guides-basic/dotnet-runtime-support"},{"type":"link","label":"Installing Your Add-in","href":"/docs/guides-basic/installing-your-add-in","docId":"guides-basic/installing-your-add-in"},{"type":"link","label":"Optional Parameters and Default Values","href":"/docs/guides-basic/optional-parameters-and-default-values","docId":"guides-basic/optional-parameters-and-default-values"},{"type":"link","label":"Excel-DNA properties in SDK-style project files","href":"/docs/guides-basic/sdk-style-project-properties","docId":"guides-basic/sdk-style-project-properties"},{"type":"link","label":"Updating Project File to SDK-Style","href":"/docs/guides-basic/updating-project-file-to-sdk-style","docId":"guides-basic/updating-project-file-to-sdk-style"}],"href":"/docs/category/guides---basic"},{"type":"category","label":"Guides - Advanced","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Async Macro Example","href":"/docs/guides-advanced/async-macro-example-formatting-the-calling-cell-from-a-udf","docId":"guides-advanced/async-macro-example-formatting-the-calling-cell-from-a-udf"},{"type":"link","label":"Building Excel-DNA From Source","href":"/docs/guides-advanced/building-excedna-from-source","docId":"guides-advanced/building-excedna-from-source"},{"type":"link","label":"Checking and Downloading Updates in .NET","href":"/docs/guides-advanced/checking-and-downloading-updates-in-dotnet","docId":"guides-advanced/checking-and-downloading-updates-in-dotnet"},{"type":"link","label":"COM Server Support","href":"/docs/guides-advanced/com-server-support","docId":"guides-advanced/com-server-support"},{"type":"link","label":"Configuring NLog Logging","href":"/docs/guides-advanced/configuring-nlog-logging","docId":"guides-advanced/configuring-nlog-logging"},{"type":"link","label":"Detecting Excel Shutdown and AutoClose","href":"/docs/guides-advanced/detecting-excel-shutdown-and-autoclose","docId":"guides-advanced/detecting-excel-shutdown-and-autoclose"},{"type":"link","label":"Dynamic Delegate Registration","href":"/docs/guides-advanced/dynamic-delegate-registration","docId":"guides-advanced/dynamic-delegate-registration"},{"type":"link","label":"FSharp Type Inference","href":"/docs/guides-advanced/fsharp-type-inference","docId":"guides-advanced/fsharp-type-inference"},{"type":"link","label":"Excel-DNA Logging Configuration Guide","href":"/docs/guides-advanced/logging_configuration_netcore","docId":"guides-advanced/logging_configuration_netcore"},{"type":"link","label":"Performing Asynchronous Work","href":"/docs/guides-advanced/performing-asynchronous-work","docId":"guides-advanced/performing-asynchronous-work"},{"type":"link","label":"Reactive Extensions for Excel","href":"/docs/guides-advanced/reactive-extensions-for-excel","docId":"guides-advanced/reactive-extensions-for-excel"},{"type":"link","label":"User Settings and the .xll.config File","href":"/docs/guides-advanced/user-settings-and-the-xllconfig-file","docId":"guides-advanced/user-settings-and-the-xllconfig-file"},{"type":"link","label":"Utilising CustomXMLParts in Excel Workbooks","href":"/docs/guides-advanced/utilising-customXMLparts-in-excel-workbooks","docId":"guides-advanced/utilising-customXMLparts-in-excel-workbooks"}],"href":"/docs/category/guides---advanced"},{"type":"category","label":"Tips & Tricks","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Creating a Threaded Modal Dialog","href":"/docs/tips-n-tricks/creating-a-threaded-modal-dialog","docId":"tips-n-tricks/creating-a-threaded-modal-dialog"},{"type":"link","label":"Enumerating Excel COM Automation Collections","href":"/docs/tips-n-tricks/enumerating-excel-com-automation-collections","docId":"tips-n-tricks/enumerating-excel-com-automation-collections"}],"href":"/docs/category/tips--tricks"},{"type":"category","label":"Archive","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Wiki","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AssemblyLoadContext-Notes","href":"/docs/archive/wiki/AssemblyLoadContext-Notes","docId":"archive/wiki/AssemblyLoadContext-Notes"},{"type":"link","label":"Async-Notes","href":"/docs/archive/wiki/Async-Notes","docId":"archive/wiki/Async-Notes"},{"type":"link","label":"Build-Output-Customization","href":"/docs/archive/wiki/Build-Output-Customization","docId":"archive/wiki/Build-Output-Customization"},{"type":"link","label":"COM-exports-for-VBA-access","href":"/docs/archive/wiki/COM-exports-for-VBA-access","docId":"archive/wiki/COM-exports-for-VBA-access"},{"type":"link","label":"COM-object-model-notes","href":"/docs/archive/wiki/COM-object-model-notes","docId":"archive/wiki/COM-object-model-notes"},{"type":"link","label":"Diagnostic-Logging","href":"/docs/archive/wiki/Diagnostic-Logging","docId":"archive/wiki/Diagnostic-Logging"},{"type":"link","label":"Dynamic-Arrays","href":"/docs/archive/wiki/Dynamic-Arrays","docId":"archive/wiki/Dynamic-Arrays"},{"type":"link","label":"Excel-DNA-Compatibility-with-Excel","href":"/docs/archive/wiki/Excel-DNA-Compatibility-with-Excel","docId":"archive/wiki/Excel-DNA-Compatibility-with-Excel"},{"type":"link","label":"Excel-Support-Links","href":"/docs/archive/wiki/Excel-Support-Links","docId":"archive/wiki/Excel-Support-Links"},{"type":"link","label":"ExcelFunctionAttribute","href":"/docs/archive/wiki/ExcelFunction-and-other-attributes","docId":"archive/wiki/ExcelFunction-and-other-attributes"},{"type":"link","label":"FAQ","href":"/docs/archive/wiki/FAQ","docId":"archive/wiki/FAQ"},{"type":"link","label":"Group-Policy-and-Add-Ins","href":"/docs/archive/wiki/Group-Policy-and-Add-Ins","docId":"archive/wiki/Group-Policy-and-Add-Ins"},{"type":"link","label":"Indirect-function-calls","href":"/docs/archive/wiki/Indirect-function-calls","docId":"archive/wiki/Indirect-function-calls"},{"type":"link","label":"Links-about-RefEdit","href":"/docs/archive/wiki/Links-about-RefEdit","docId":"archive/wiki/Links-about-RefEdit"},{"type":"link","label":"Method-Registration","href":"/docs/archive/wiki/Method-Registration","docId":"archive/wiki/Method-Registration"},{"type":"link","label":"NuGet-Packages","href":"/docs/archive/wiki/NuGet-Packages","docId":"archive/wiki/NuGet-Packages"}],"href":"/docs/category/wiki"},{"type":"category","label":"Obsolete","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Home","href":"/docs/archive/obsolete/Home","docId":"archive/obsolete/Home"},{"type":"link","label":"Getting Started with Excel-DNA","href":"/docs/archive/obsolete/getting-started","docId":"archive/obsolete/getting-started"},{"type":"link","label":"Excel-DNA Performance","href":"/docs/archive/obsolete/exceldna-performance","docId":"archive/obsolete/exceldna-performance"},{"type":"link","label":"Introduction - excel-dna.github.io","href":"/docs/archive/obsolete/intoduction-excel-dna.github.io","docId":"archive/obsolete/intoduction-excel-dna.github.io"},{"type":"link","label":"Background","href":"/docs/archive/obsolete/Excel-C-API","docId":"archive/obsolete/Excel-C-API"},{"type":"link","label":"Adding a Keyboard Shortcut","href":"/docs/archive/obsolete/adding-keyboard-shortcut","docId":"archive/obsolete/adding-keyboard-shortcut"},{"type":"link","label":"Debugging Addins and Excel-DNA","href":"/docs/archive/obsolete/debugging-addins-and-exceldna","docId":"archive/obsolete/debugging-addins-and-exceldna"},{"type":"link","label":"Excel-DNA Packing Tool","href":"/docs/archive/obsolete/exceldna-packing-tool","docId":"archive/obsolete/exceldna-packing-tool"},{"type":"link","label":"FSharp Standalone Assemblies","href":"/docs/archive/obsolete/fsharp-standalone-assemblies","docId":"archive/obsolete/fsharp-standalone-assemblies"},{"type":"link","label":"Integrating with VBA","href":"/docs/archive/obsolete/integrating-with-vba","docId":"archive/obsolete/integrating-with-vba"},{"type":"link","label":"Returning 1-D Arrays","href":"/docs/archive/obsolete/returning-1-d-arrays","docId":"archive/obsolete/returning-1-d-arrays"}],"href":"/docs/category/obsolete"}],"href":"/docs/category/archive"}]},"docs":{"archive/obsolete/adding-keyboard-shortcut":{"id":"archive/obsolete/adding-keyboard-shortcut","title":"Adding a Keyboard Shortcut","description":"You can register a shortcut key for your macro in your AutoOpen.","sidebar":"tutorialSidebar"},"archive/obsolete/debugging-addins-and-exceldna":{"id":"archive/obsolete/debugging-addins-and-exceldna","title":"Debugging Addins and Excel-DNA","description":"Debugging user code in your add-in","sidebar":"tutorialSidebar"},"archive/obsolete/Excel-C-API":{"id":"archive/obsolete/Excel-C-API","title":"Background","description":"The Excel C API was first introduced in Excel \'95 and has continuously evolved with new versions of Excel. Excel-DNA uses the C API to integrate with Excel, though Excel-DNA add-in can also use the COM Automation interfaces where needed.","sidebar":"tutorialSidebar"},"archive/obsolete/exceldna-packing-tool":{"id":"archive/obsolete/exceldna-packing-tool","title":"Excel-DNA Packing Tool","description":"Excel-DNA has a packing tool that allows you to create a single-file .xll add-in.","sidebar":"tutorialSidebar"},"archive/obsolete/exceldna-performance":{"id":"archive/obsolete/exceldna-performance","title":"Excel-DNA Performance","description":"With Excel-DNA you can create high-performance UDFs by using a restricted set of types, and taking responsibility for ensuring that exceptions are not leaked. Otherwise, ExcelDna is designed be flexible and make it easy to expose your functions safely - these extensions perform well but are not tuned for high-performance interop.","sidebar":"tutorialSidebar"},"archive/obsolete/fsharp-standalone-assemblies":{"id":"archive/obsolete/fsharp-standalone-assemblies","title":"FSharp Standalone Assemblies","description":"F# assemblies can be compiled with a -standalone switch that embeds the F# runtime into the assembly, and allows it to run without requiring additional assemblies.","sidebar":"tutorialSidebar"},"archive/obsolete/getting-started":{"id":"archive/obsolete/getting-started","title":"Getting Started with Excel-DNA","description":"Do this first:","sidebar":"tutorialSidebar"},"archive/obsolete/Home":{"id":"archive/obsolete/Home","title":"Home","description":"Welcome to the Excel-DNA wiki!","sidebar":"tutorialSidebar"},"archive/obsolete/integrating-with-vba":{"id":"archive/obsolete/integrating-with-vba","title":"Integrating with VBA","description":"Excel-DNA can make it easy to call between .NET and VBA. This means existing VBA code need not be rewritten. And end users are likely to find VBA much easier to develop in.","sidebar":"tutorialSidebar"},"archive/obsolete/intoduction-excel-dna.github.io":{"id":"archive/obsolete/intoduction-excel-dna.github.io","title":"Introduction - excel-dna.github.io","description":"Introduction","sidebar":"tutorialSidebar"},"archive/obsolete/returning-1-d-arrays":{"id":"archive/obsolete/returning-1-d-arrays","title":"Returning 1-D Arrays","description":"NOTE: This guide only applies to old version of Excel that does not support Dynamic Arrays.","sidebar":"tutorialSidebar"},"archive/wiki/AssemblyLoadContext-Notes":{"id":"archive/wiki/AssemblyLoadContext-Notes","title":"AssemblyLoadContext-Notes","description":"https://docs.microsoft.com/en-us/dotnet/core/dependency-loading/loading-managed","sidebar":"tutorialSidebar"},"archive/wiki/Async-Notes":{"id":"archive/wiki/Async-Notes","title":"Async-Notes","description":"Excel-DNA supports two types of async function:","sidebar":"tutorialSidebar"},"archive/wiki/Build-Output-Customization":{"id":"archive/wiki/Build-Output-Customization","title":"Build-Output-Customization","description":"When the ExcelDna.AddIn NuGet package is installed into a project, some additional MSBuild targets are defined. These are used to copy the required .xll native add-in into the output directory, and create single-file packed versions of the add-in.","sidebar":"tutorialSidebar"},"archive/wiki/COM-exports-for-VBA-access":{"id":"archive/wiki/COM-exports-for-VBA-access","title":"COM-exports-for-VBA-access","description":"Excel-DNA supports registering the .xll as a regular COM library, which can then be accessed from VBA (either late-bound via CreateObject or referenced in a project via Tools->References. This allows COM-visible classes in the add-in to be instantiated and accessed from VBA, with two advantages over regular COM libraries:","sidebar":"tutorialSidebar"},"archive/wiki/COM-object-model-notes":{"id":"archive/wiki/COM-object-model-notes","title":"COM-object-model-notes","description":"* You should only use the Excel COM object model from the main Excel thread. Thus not from other threads, Tasks that you create, timer callbacks that you set up. It\'s safe to call it from a ribbon callback, of any macro (ExcelCommand). If you have a timer or some other thread that needs to do work back on the main thread, you can start a macro context running on the main thread with a call to ExcelAsyncUtil.QueueAsMacro(...). This waits for Excel to be ready, then runs the delegate you pass. In there, you can use the object model.","sidebar":"tutorialSidebar"},"archive/wiki/Diagnostic-Logging":{"id":"archive/wiki/Diagnostic-Logging","title":"Diagnostic-Logging","description":"Since version 0.33, Excel-DNA uses the standard .NET System.Diagnostics.Trace mechanisms for diagnostic logging.","sidebar":"tutorialSidebar"},"archive/wiki/Dynamic-Arrays":{"id":"archive/wiki/Dynamic-Arrays","title":"Dynamic-Arrays","description":"Some links","sidebar":"tutorialSidebar"},"archive/wiki/Excel-DNA-Compatibility-with-Excel":{"id":"archive/wiki/Excel-DNA-Compatibility-with-Excel","title":"Excel-DNA-Compatibility-with-Excel","description":"* Excel-DNA only works on the full Windows desktop version of Excel","sidebar":"tutorialSidebar"},"archive/wiki/Excel-Support-Links":{"id":"archive/wiki/Excel-Support-Links","title":"Excel-Support-Links","description":"Microsoft KB articles on general Excel troubleshooting","sidebar":"tutorialSidebar"},"archive/wiki/ExcelFunction-and-other-attributes":{"id":"archive/wiki/ExcelFunction-and-other-attributes","title":"ExcelFunctionAttribute","description":"* Name","sidebar":"tutorialSidebar"},"archive/wiki/FAQ":{"id":"archive/wiki/FAQ","title":"FAQ","description":"Common Issues with Excel","sidebar":"tutorialSidebar"},"archive/wiki/Group-Policy-and-Add-Ins":{"id":"archive/wiki/Group-Policy-and-Add-Ins","title":"Group-Policy-and-Add-Ins","description":"https://docs.microsoft.com/en-us/office365/troubleshoot/group-policy/office-add-in-not-loaded","sidebar":"tutorialSidebar"},"archive/wiki/Indirect-function-calls":{"id":"archive/wiki/Indirect-function-calls","title":"Indirect-function-calls","description":"Weird trick (from comments here//techcommunity.microsoft.com/t5/Excel-Blog/Excel-Dynamic-Array-Improvements/ba-p/332070)","sidebar":"tutorialSidebar"},"archive/wiki/Links-about-RefEdit":{"id":"archive/wiki/Links-about-RefEdit","title":"Links-about-RefEdit","description":"Sample project with form and range selection//github.com/Ron-Ldn/DotNetRefEdit","sidebar":"tutorialSidebar"},"archive/wiki/Method-Registration":{"id":"archive/wiki/Method-Registration","title":"Method-Registration","description":"Introduction","sidebar":"tutorialSidebar"},"archive/wiki/NuGet-Packages":{"id":"archive/wiki/NuGet-Packages","title":"NuGet-Packages","description":"* ExcelDna.Integration","sidebar":"tutorialSidebar"},"getting-started":{"id":"getting-started","title":"Getting Started","description":"The easiest way to make an Excel-DNA addin is to create to follow these simple steps:","sidebar":"tutorialSidebar"},"guides-advanced/async-macro-example-formatting-the-calling-cell-from-a-udf":{"id":"guides-advanced/async-macro-example-formatting-the-calling-cell-from-a-udf","title":"Async Macro Example","description":"We define a function that schedules a macro call to update the format of the calling range.","sidebar":"tutorialSidebar"},"guides-advanced/building-excedna-from-source":{"id":"guides-advanced/building-excedna-from-source","title":"Building Excel-DNA From Source","description":"To build Excel-DNA from source, create a single  directory first.","sidebar":"tutorialSidebar"},"guides-advanced/checking-and-downloading-updates-in-dotnet":{"id":"guides-advanced/checking-and-downloading-updates-in-dotnet","title":"Checking and Downloading Updates in .NET","description":"Following is a simple method to check for available updates of Add-ins/Programs:","sidebar":"tutorialSidebar"},"guides-advanced/com-server-support":{"id":"guides-advanced/com-server-support","title":"COM Server Support","description":"Functions and macros created in an Excel-DNA add-in can be called directly from Excel VBA by using Application.Run(...). However, .NET also supports creating rich object models that are exported as COM libraries, which can be Tools->Referenced in VBA. Excel-DNA has some advanced support to host COM-exported objects from Excel-DNA add-ins, giving some advantages over the regular .NET \u2018Register for COM interop\u2019 hosting approach:","sidebar":"tutorialSidebar"},"guides-advanced/configuring-nlog-logging":{"id":"guides-advanced/configuring-nlog-logging","title":"Configuring NLog Logging","description":"This is a guide to setting up logging from within your Excel-DNA add-in, using the NLog library. I used Visual Studio 2012 and C# to put together the example, but nothing here should be specific to the particular versions or language used.","sidebar":"tutorialSidebar"},"guides-advanced/detecting-excel-shutdown-and-autoclose":{"id":"guides-advanced/detecting-excel-shutdown-and-autoclose","title":"Detecting Excel Shutdown and AutoClose","description":"This is a short note on the IExcelAddIn.AutoClose() callback, noting that it is not called when Excel is shut down, and explaining how the implementation came about.","sidebar":"tutorialSidebar"},"guides-advanced/dynamic-delegate-registration":{"id":"guides-advanced/dynamic-delegate-registration","title":"Dynamic Delegate Registration","description":"In come cases one might want to implement some kind of function wrapper or transformation at runtime. E.g. automatically wrapping and registering async Task / Rx functions.","sidebar":"tutorialSidebar"},"guides-advanced/fsharp-type-inference":{"id":"guides-advanced/fsharp-type-inference","title":"FSharp Type Inference","description":"When creating UDFs with F#, the flexible type inference might lead to function signatures that are not supported by Excel-DNA, or lead to unexpected results.","sidebar":"tutorialSidebar"},"guides-advanced/logging_configuration_netcore":{"id":"guides-advanced/logging_configuration_netcore","title":"Excel-DNA Logging Configuration Guide","description":"This guide provides a comprehensive overview of configuring the logging system in Excel-DNA, suitable for both .NET Framework 4.x and .NET 6+ environments.","sidebar":"tutorialSidebar"},"guides-advanced/performing-asynchronous-work":{"id":"guides-advanced/performing-asynchronous-work","title":"Performing Asynchronous Work","description":"It is important to only communicate with Excel when it is Ready. For example, if one displays a non modal dialog then the program may fail if it attempts to call a VBA routine in response to a button press while the user is also in the process of editing a cell. Intercepting Window Messages messages etc. can also produce errors even though they are on the main thread. And of course accessing Excel from a different thread is forbidden.","sidebar":"tutorialSidebar"},"guides-advanced/reactive-extensions-for-excel":{"id":"guides-advanced/reactive-extensions-for-excel","title":"Reactive Extensions for Excel","description":"Excel-DNA has support for integrating the Reactive Extensions library (Rx) with Excel via RTD.","sidebar":"tutorialSidebar"},"guides-advanced/user-settings-and-the-xllconfig-file":{"id":"guides-advanced/user-settings-and-the-xllconfig-file","title":"User Settings and the .xll.config File","description":"NOTE: The details below are applicable only to add-ins targeting .NET Framework 4.x. With .NET 6, the XML-based config files are no longer automatically loaded. Additionally, the System.Configuration.ConfigurationManager has limited backward compatibility. It is recommended to use Microsoft.Extensions.Configuration and related libraries to use AppSettings.json or XML-based configuration files.","sidebar":"tutorialSidebar"},"guides-advanced/utilising-customXMLparts-in-excel-workbooks":{"id":"guides-advanced/utilising-customXMLparts-in-excel-workbooks","title":"Utilising CustomXMLParts in Excel Workbooks","description":"After struggling with the limitations of custom docproperties (being generally much too short), I decided to focus on a technology that was introduced with Office 2007:","sidebar":"tutorialSidebar"},"guides-basic/accepting-range-parameters-in-udfs":{"id":"guides-basic/accepting-range-parameters-in-udfs","title":"Accepting Range Parameters in UDFs","description":"Parameters with the type of Excel\'s Range COM object are not directly supported by Excel-DNA.  There is a list of allowed parameter types here: Reference for data types in UDFs","sidebar":"tutorialSidebar"},"guides-basic/asynchronous-functions":{"id":"guides-basic/asynchronous-functions","title":"Asynchronous Functions","description":"Excel-DNA has a core implementation to support asynchronous functions. Two primary ways this could be implemented is through:","sidebar":"tutorialSidebar"},"guides-basic/creating-a-help-file":{"id":"guides-basic/creating-a-help-file","title":"Creating a Help File","description":"With the HelpTopic property of the ExcelFunction attribute, you can add a pointer to a topic in a .chm help file, or a url with more detailed information.","sidebar":"tutorialSidebar"},"guides-basic/customizing-ribbons":{"id":"guides-basic/customizing-ribbons","title":"Customizing Ribbons","description":"Setting Ribbon Properties","sidebar":"tutorialSidebar"},"guides-basic/dotnet-runtime-support":{"id":"guides-basic/dotnet-runtime-support","title":".NET runtime support","description":"Excel-DNA continues to support .NET Framework 4.x. For the core add-in libraries the minimum version is v4.5.2, but I recommend targeting v4.7.2 (net472) or v4.8 (net48) for the best compatiiblity with libraries and Windows releases.","sidebar":"tutorialSidebar"},"guides-basic/excel-programming-interfaces/excel-c-api":{"id":"guides-basic/excel-programming-interfaces/excel-c-api","title":"Excel C API","description":"The Excel C API was first introduced in Excel \'95 and has continuously evolved with new versions of Excel. Excel-DNA uses the C API to integrate with Excel, though Excel-DNA add-in can also use the COM Automation interfaces where needed.","sidebar":"tutorialSidebar"},"guides-basic/excel-programming-interfaces/introduction":{"id":"guides-basic/excel-programming-interfaces/introduction","title":"Introduction","description":"Excel supports two completely different programming interfaces:","sidebar":"tutorialSidebar"},"guides-basic/excel-programming-interfaces/using-the-excel-com-automation-interfaces":{"id":"guides-basic/excel-programming-interfaces/using-the-excel-com-automation-interfaces","title":"Using the Excel COM Automation Interfaces","description":"Summary","sidebar":"tutorialSidebar"},"guides-basic/installing-your-add-in":{"id":"guides-basic/installing-your-add-in","title":"Installing Your Add-in","description":"Ease of deployment is one of the great advantages of making your Excel add-ins using Excel-DNA. This page provides some notes on the different approaches to installing your add-in.","sidebar":"tutorialSidebar"},"guides-basic/Intellisense":{"id":"guides-basic/Intellisense","title":"IntelliSense","description":"Excel includes a feature that enables users to utilise functions more effectively by displaying pop-up description regarding the function and its parameters. Examples of IntelliSense in action can be seen in the figure below:","sidebar":"tutorialSidebar"},"guides-basic/optional-parameters-and-default-values":{"id":"guides-basic/optional-parameters-and-default-values","title":"Optional Parameters and Default Values","description":"Update//github.com/Excel-DNA/Registration. I leave the documentation below as applying to the core Excel-DNA library. _","sidebar":"tutorialSidebar"},"guides-basic/sdk-style-project-properties":{"id":"guides-basic/sdk-style-project-properties","title":"Excel-DNA properties in SDK-style project files","description":"The following project properties are recognized by the Excel-DNA build task, and can be used to customize the build output.","sidebar":"tutorialSidebar"},"guides-basic/updating-project-file-to-sdk-style":{"id":"guides-basic/updating-project-file-to-sdk-style","title":"Updating Project File to SDK-Style","description":".NET SDK-style projects are a new project format introduced with .NET Core 2.0, which allows developers to build and manage .NET projects in a simplified way. Unlike the traditional .NET Framework project format, which requires a complex XML-based configuration file, SDK-style projects use a simpler and more intuitive format based on a set of pre-defined templates.","sidebar":"tutorialSidebar"},"introduction":{"id":"introduction","title":"Introduction","description":"- The core library project can be found on GitHub, where the latest source versions are hosted.","sidebar":"tutorialSidebar"},"tips-n-tricks/creating-a-threaded-modal-dialog":{"id":"tips-n-tricks/creating-a-threaded-modal-dialog","title":"Creating a Threaded Modal Dialog","description":"","sidebar":"tutorialSidebar"},"tips-n-tricks/enumerating-excel-com-automation-collections":{"id":"tips-n-tricks/enumerating-excel-com-automation-collections","title":"Enumerating Excel COM Automation Collections","description":"When referencing COM Automation collections late-bound, the enumeration via For Each does not automatically work. An explicitly cast or set to a variable of type IEnumerable will work, though:","sidebar":"tutorialSidebar"}}}')}}]);