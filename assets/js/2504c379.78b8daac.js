"use strict";(self.webpackChunkexcel_dna=self.webpackChunkexcel_dna||[]).push([[7895],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=c(n),d=i,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||r;return n?a.createElement(f,l(l({ref:t},s),{},{components:n})):a.createElement(f,l({ref:t},s))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<r;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3185:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var a=n(7462),i=(n(7294),n(3905));const r={},l="ExcelFunctionAttribute",o={unversionedId:"archive/wiki/ExcelFunction-and-other-attributes",id:"archive/wiki/ExcelFunction-and-other-attributes",title:"ExcelFunctionAttribute",description:"* Name",source:"@site/docs/archive/wiki/ExcelFunction-and-other-attributes.md",sourceDirName:"archive/wiki",slug:"/archive/wiki/ExcelFunction-and-other-attributes",permalink:"/Website/docs/archive/wiki/ExcelFunction-and-other-attributes",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Excel-Support-Links",permalink:"/Website/docs/archive/wiki/Excel-Support-Links"},next:{title:"FAQ",permalink:"/Website/docs/archive/wiki/FAQ"}},p={},c=[{value:"IsMacroType",id:"ismacrotype",level:3},{value:"IsThreadSafe",id:"isthreadsafe",level:3},{value:"IsClusterSafe",id:"isclustersafe",level:3},{value:"IsExceptionSafe",id:"isexceptionsafe",level:3}],s={toc:c};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"excelfunctionattribute"},"ExcelFunctionAttribute"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Name")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Description")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Category")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"HelpTopic")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"IsVolatile")," (",(0,i.kt)("inlineCode",{parentName:"li"},"!")," suffix)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"IsHidden")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"IsExceptionSafe")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"IsMacroType")," (",(0,i.kt)("inlineCode",{parentName:"li"},"#")," suffix)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"IsThreadSafe")," (",(0,i.kt)("inlineCode",{parentName:"li"},"$")," suffix)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"IsClusterSafe")," (",(0,i.kt)("inlineCode",{parentName:"li"},"&")," suffix)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ExplicitRegistration")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SuppressOverwriteError"))),(0,i.kt)("h3",{id:"ismacrotype"},"IsMacroType"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"IsMacroType=true")," attribute changes the parameters Excel-DNA uses when registering the function, which is done with a call to ",(0,i.kt)("inlineCode",{parentName:"p"},"xlfRegister"),", as documented in the ",(0,i.kt)("a",{parentName:"p",href:"https://msdn.microsoft.com/en-us/library/office/bb687900.aspx"},"Excel API Reference for ",(0,i.kt)("inlineCode",{parentName:"a"},"xlfRegister")),'. In particular, Excel-DNA adds a "#" to the end of the ',(0,i.kt)("inlineCode",{parentName:"p"},"pxTypeText")," parameter if ",(0,i.kt)("inlineCode",{parentName:"p"},"IsMacroType=true"),"."),(0,i.kt)("p",null,"The documentation says:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Placing a # character after the last parameter code in ",(0,i.kt)("inlineCode",{parentName:"p"},"pxTypeText")," gives the function the same calling permissions as functions on a macro sheet. These are as follows:"),(0,i.kt)("ul",{parentName:"blockquote"},(0,i.kt)("li",{parentName:"ul"},"The function can retrieve the values of cells that have not yet been calculated in this recalculation cycle."),(0,i.kt)("li",{parentName:"ul"},"The function can call any of the XLM information (Class 2) functions, for example, ",(0,i.kt)("inlineCode",{parentName:"li"},"xlfGetCell"),".")),(0,i.kt)("p",{parentName:"blockquote"},"If the number sign (#) is not present:"),(0,i.kt)("ul",{parentName:"blockquote"},(0,i.kt)("li",{parentName:"ul"},"evaluating an uncalculated cell results in an ",(0,i.kt)("inlineCode",{parentName:"li"},"xlretUncalced")," error, and the current function is called again once the cell has been calculated;"),(0,i.kt)("li",{parentName:"ul"},"calling any XLM information function other than ",(0,i.kt)("inlineCode",{parentName:"li"},"xlfCaller")," results in an ",(0,i.kt)("inlineCode",{parentName:"li"},"xlretInvXlfn")," error."))),(0,i.kt)("p",null,"Some disadvantages of marking a function as ",(0,i.kt)("inlineCode",{parentName:"p"},"IsMacroType=true"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'they cannot be multi-threaded - Excel-DNA will not add the "$" suffix when registering, even if they are marked as ',(0,i.kt)("inlineCode",{parentName:"p"},"IsThreadSafe=true"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"if they contain at least one parameter of type object that is marked ",(0,i.kt)("inlineCode",{parentName:"p"},"[ExcelArgument(AllowReference=true)]")," then the function is automatically considered as volatile by Excel (even if the function is explicitly marked as ",(0,i.kt)("inlineCode",{parentName:"p"},"IsVolatile=false"),".)"))),(0,i.kt)("p",null,"Further, my understanding is that such functions are treated differently in the dependency processing during Excel calculations. So you might expect some changes on the order in which sheets calculate. I have no reference or reproduction for this, though."),(0,i.kt)("p",null,"My recommendation is to only set ",(0,i.kt)("inlineCode",{parentName:"p"},"IsMacroType=true")," in exceptional cases, when you know it is certainly required and you are prepared to investigate any issues that might arise."),(0,i.kt)("h3",{id:"isthreadsafe"},"IsThreadSafe"),(0,i.kt)("p",null,"Setting ",(0,i.kt)("inlineCode",{parentName:"p"},"IsThreadSafe=true")," indicates that a function can safely participate in ",(0,i.kt)("a",{parentName:"p",href:"https://msdn.microsoft.com/en-us/library/office/bb687899.aspx"},"Multithreaded recalculation"),". This just adds a ",(0,i.kt)("inlineCode",{parentName:"p"},"$")," to the end of the registration string used in the internal call made to ",(0,i.kt)("inlineCode",{parentName:"p"},"xlfRegister"),"."),(0,i.kt)("h3",{id:"isclustersafe"},"IsClusterSafe"),(0,i.kt)("p",null,"Setting ",(0,i.kt)("inlineCode",{parentName:"p"},"IsClusterSafe=true")," indicates that a function is a ",(0,i.kt)("a",{parentName:"p",href:"https://msdn.microsoft.com/en-us/library/office/ff475871.aspx"},"Cluster Safe Function"),". This just adds an ",(0,i.kt)("inlineCode",{parentName:"p"},"&")," to the end of the registration string used in the internal call made to ",(0,i.kt)("inlineCode",{parentName:"p"},"xlfRegister"),"."),(0,i.kt)("h3",{id:"isexceptionsafe"},"IsExceptionSafe"),(0,i.kt)("p",null,"Setting ",(0,i.kt)("inlineCode",{parentName:"p"},"IsExceptionSafe=true")," indicates that Excel should crash whenever an unhandled exception is thrown.\nIt allows some performance optimization by Excel-DNA, but is a feature best ignored. "),(0,i.kt)("h1",{id:"excelargumentattribute"},(0,i.kt)("inlineCode",{parentName:"h1"},"ExcelArgumentAttribute")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Name")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Description")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"AllowReference")," (R / U datatype in ",(0,i.kt)("inlineCode",{parentName:"li"},"xlfRegister"),") - Arguments of type object may also receive ",(0,i.kt)("inlineCode",{parentName:"li"},"ExcelReference"),".")),(0,i.kt)("h1",{id:"excelcommandattribute"},(0,i.kt)("inlineCode",{parentName:"h1"},"ExcelCommandAttribute")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Name")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Description")," (",(0,i.kt)("em",{parentName:"li"},"Unused"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"HelpTopic")," (",(0,i.kt)("em",{parentName:"li"},"Unused"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ShortCut")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MenuName")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MenuText")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"IsExceptionSafe")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ExplicitRegistration")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SuppressOverwriteError"))))}u.isMDXComponent=!0}}]);