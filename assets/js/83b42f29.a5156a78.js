"use strict";(self.webpackChunkexcel_dna=self.webpackChunkexcel_dna||[]).push([[6157],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>E});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),g=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=g(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=g(t),d=i,E=c["".concat(s,".").concat(d)]||c[d]||p[d]||a;return t?r.createElement(E,o(o({ref:n},u),{},{components:t})):r.createElement(E,o({ref:n},u))}));function E(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var g=2;g<a;g++)o[g]=t[g];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7720:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>g});var r=t(7462),i=(t(7294),t(3905));const a={},o="Excel-DNA Logging Configuration Guide",l={unversionedId:"guides-advanced/logging_configuration_netcore",id:"guides-advanced/logging_configuration_netcore",title:"Excel-DNA Logging Configuration Guide",description:"This guide provides a comprehensive overview of configuring the logging system in Excel-DNA, suitable for both .NET Framework 4.x and .NET 6+ environments.",source:"@site/docs/guides-advanced/logging_configuration_netcore.md",sourceDirName:"guides-advanced",slug:"/guides-advanced/logging_configuration_netcore",permalink:"/docs/guides-advanced/logging_configuration_netcore",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"FSharp Type Inference",permalink:"/docs/guides-advanced/fsharp-type-inference"},next:{title:"Performing Asynchronous Work",permalink:"/docs/guides-advanced/performing-asynchronous-work"}},s={},g=[{value:"Configuration Differences: .NET Framework vs .NET 6+",id:"configuration-differences-net-framework-vs-net-6",level:2},{value:"Understanding SourceLevels and TraceEventTypes",id:"understanding-sourcelevels-and-traceeventtypes",level:2},{value:"SourceLevels Enumeration",id:"sourcelevels-enumeration",level:3},{value:"TraceEventTypes Enumeration",id:"traceeventtypes-enumeration",level:3},{value:"Configuration Settings",id:"configuration-settings",level:2},{value:"Environment Variable Configuration",id:"environment-variable-configuration",level:3},{value:"Registry Configuration",id:"registry-configuration",level:3},{value:"Example Configurations",id:"example-configurations",level:2},{value:"Environment Variable Script",id:"environment-variable-script",level:3},{value:"Registry Script",id:"registry-script",level:3},{value:"IntelliSense logging",id:"intellisense-logging",level:3},{value:"Conclusion",id:"conclusion",level:2}],u={toc:g},c="wrapper";function p(e){let{components:n,...t}=e;return(0,i.kt)(c,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"excel-dna-logging-configuration-guide"},"Excel-DNA Logging Configuration Guide"),(0,i.kt)("p",null,"This guide provides a comprehensive overview of configuring the logging system in Excel-DNA, suitable for both .NET Framework 4.x and .NET 6+ environments."),(0,i.kt)("h2",{id:"configuration-differences-net-framework-vs-net-6"},"Configuration Differences: .NET Framework vs .NET 6+"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"For add-ins targeting ",(0,i.kt)("strong",{parentName:"li"},".NET Framework 4.x"),", traditional ",(0,i.kt)("inlineCode",{parentName:"li"},".config")," file logging configuration is supported in addition to the methods described below."),(0,i.kt)("li",{parentName:"ul"},"For add-ins targeting ",(0,i.kt)("strong",{parentName:"li"},".NET 6+"),", ",(0,i.kt)("inlineCode",{parentName:"li"},".config")," file support is no longer available. Configuration must be done through environment variables or the Windows Registry as outlined in this guide.")),(0,i.kt)("p",null,"The following information applies to both environments, with the additional ",(0,i.kt)("inlineCode",{parentName:"p"},".config")," file option available for .NET Framework 4.x."),(0,i.kt)("h2",{id:"understanding-sourcelevels-and-traceeventtypes"},"Understanding SourceLevels and TraceEventTypes"),(0,i.kt)("h3",{id:"sourcelevels-enumeration"},"SourceLevels Enumeration"),(0,i.kt)("p",null,"`","SourceLevels","`"," set the global threshold for capturing log messages. The levels include:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Off"),": Disables logging."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Critical"),": Captures only critical failures."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Error"),": Captures error events and more severe."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Warning"),": Captures warnings and more severe events."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Information"),": Captures informational messages and more severe."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Verbose"),": Captures all messages, including detailed and verbose."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"All"),": Logs all types of events.")),(0,i.kt)("h3",{id:"traceeventtypes-enumeration"},"TraceEventTypes Enumeration"),(0,i.kt)("p",null,"`","TraceEventTypes","`"," specify the type of event being logged, used for configuring individual ","`","TraceListeners","`",". They include:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Critical"),": For critical events."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Error"),": For error events."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Warning"),": For warnings."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Information"),": For informational messages."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Verbose"),": For detailed and verbose messages."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Start, Stop, Suspend, Resume, Transfer"),": Specialized types for advanced scenarios.")),(0,i.kt)("h2",{id:"configuration-settings"},"Configuration Settings"),(0,i.kt)("h3",{id:"environment-variable-configuration"},"Environment Variable Configuration"),(0,i.kt)("p",null,"Configure persistent logging settings with these environment variables:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Global Source Level"),": ","`","EXCELDNA_DIAGNOSTICS_SOURCE_LEVEL","`"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Log Display Level"),": ","`","EXCELDNA_DIAGNOSTICS_LOGDISPLAY_LEVEL","`"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Debugger Level"),": ","`","EXCELDNA_DIAGNOSTICS_DEBUGGER_LEVEL","`"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"File Level"),": ","`","EXCELDNA_DIAGNOSTICS_FILE_LEVEL","`"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"File Name"),": ","`","EXCELDNA_DIAGNOSTICS_FILE_NAME","`")),(0,i.kt)("h3",{id:"registry-configuration"},"Registry Configuration"),(0,i.kt)("p",null,"Alternatively, use the Windows Registry at:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"`","HKEY_CURRENT_USER\\Software\\ExcelDna\\Diagnostics","`"),(0,i.kt)("li",{parentName:"ul"},"`","HKEY_LOCAL_MACHINE\\Software\\ExcelDna\\Diagnostics","`")),(0,i.kt)("h2",{id:"example-configurations"},"Example Configurations"),(0,i.kt)("h3",{id:"environment-variable-script"},"Environment Variable Script"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-batch"},'@echo off\nREM Set Excel-DNA Logging Environment Variables Persistently\n\nsetx EXCELDNA_DIAGNOSTICS_SOURCE_LEVEL "Warning"\nsetx EXCELDNA_DIAGNOSTICS_LOGDISPLAY_LEVEL "Warning"\nsetx EXCELDNA_DIAGNOSTICS_DEBUGGER_LEVEL "Error"\nsetx EXCELDNA_DIAGNOSTICS_FILE_LEVEL "Verbose"\nsetx EXCELDNA_DIAGNOSTICS_FILE_NAME "ExcelDnaLog.txt"\n\necho Excel-DNA Logging Environment Variables are set.\npause\n')),(0,i.kt)("h3",{id:"registry-script"},"Registry Script"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-reg"},'Windows Registry Editor Version 5.00\n\n[HKEY_CURRENT_USER\\Software\\ExcelDna\\Diagnostics]\n"SourceLevel"="Warning"\n"LogDisplayLevel"="Warning"\n"DebuggerLevel"="Error"\n"FileLevel"="Verbose"\n"FileName"="ExcelDnaLog.txt"\n')),(0,i.kt)("h3",{id:"intellisense-logging"},"IntelliSense logging"),(0,i.kt)("p",null,"Similar options can be used (with separate settings) for the IntelliSense extension:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-batch"},'setx EXCELDNA_INTELLISENSE_DIAGNOSTICS_SOURCE_LEVEL "Verbose" \nsetx EXCELDNA_INTELLISENSE_DIAGNOSTICS_DEBUGGER_LEVEL "Verbose" \nsetx EXCELDNA_INTELLISENSE_DIAGNOSTICS_FILE_LEVEL "Warning" \nsetx EXCELDNA_INTELLISENSE_DIAGNOSTICS_FILE_NAME "ExcelDnaIntelliSenseLog.txt"\n')),(0,i.kt)("p",null,"The equivalent registry entries are under"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"`","HKEY_CURRENT_USER\\Software\\ExcelDna\\IntelliSense\\Diagnostics","`"),(0,i.kt)("li",{parentName:"ul"},"`","HKEY_LOCAL_MACHINE\\Software\\ExcelDna\\IntelliSense\\Diagnostics","`")),(0,i.kt)("p",null,"Note that the LogDisplay is not configured for the IntelliSense extension."),(0,i.kt)("h2",{id:"conclusion"},"Conclusion"),(0,i.kt)("p",null,"Effective logging configuration in Excel-DNA is crucial for debugging and monitoring, especially when transitioning to .NET 6+ environments."))}p.isMDXComponent=!0}}]);