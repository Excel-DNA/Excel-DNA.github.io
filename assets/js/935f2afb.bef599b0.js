"use strict";(self.webpackChunkexcel_dna=self.webpackChunkexcel_dna||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/TestDocs/docs/introduction","docId":"introduction"},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installation","href":"/TestDocs/docs/getting-started/installation","docId":"getting-started/installation"},{"type":"link","label":"Configuration","href":"/TestDocs/docs/getting-started/configuration","docId":"getting-started/configuration"}],"href":"/TestDocs/docs/category/getting-started"},{"type":"category","label":"Guides - Basic","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Excel Programming Interfaces","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/TestDocs/docs/guides-basic/excel-programming-interfaces/introduction","docId":"guides-basic/excel-programming-interfaces/introduction"},{"type":"link","label":"Using the Excel COM Automation Interfaces","href":"/TestDocs/docs/guides-basic/excel-programming-interfaces/using-the-excel-com-automation-interfaces","docId":"guides-basic/excel-programming-interfaces/using-the-excel-com-automation-interfaces"},{"type":"link","label":"Excel C API","href":"/TestDocs/docs/guides-basic/excel-programming-interfaces/excel-c-api","docId":"guides-basic/excel-programming-interfaces/excel-c-api"}],"href":"/TestDocs/docs/category/excel-programming-interfaces"},{"type":"link","label":"Accepting Range Parameters in UDFs","href":"/TestDocs/docs/guides-basic/accepting-range-parameters-in-udfs","docId":"guides-basic/accepting-range-parameters-in-udfs"},{"type":"link","label":"Adding a Keyboard Shortcut","href":"/TestDocs/docs/guides-basic/adding-keyboard-shortcut","docId":"guides-basic/adding-keyboard-shortcut"},{"type":"link","label":"Async Macro Example","href":"/TestDocs/docs/guides-basic/async-macro-example-formatting-the-calling-cell-from-a-udf","docId":"guides-basic/async-macro-example-formatting-the-calling-cell-from-a-udf"},{"type":"link","label":"Asynchronous Functions with Tasks","href":"/TestDocs/docs/guides-basic/asynchronous-functions-with-tasks","docId":"guides-basic/asynchronous-functions-with-tasks"},{"type":"link","label":"Asynchronous Functions","href":"/TestDocs/docs/guides-basic/asynchronous-functions","docId":"guides-basic/asynchronous-functions"},{"type":"link","label":"Checking and Downloading Updates in .NET","href":"/TestDocs/docs/guides-basic/checking-and-downloading-updates-in-dotnet","docId":"guides-basic/checking-and-downloading-updates-in-dotnet"},{"type":"link","label":"COM Server Support","href":"/TestDocs/docs/guides-basic/com-server-support","docId":"guides-basic/com-server-support"},{"type":"link","label":"Configuring NLog Logging","href":"/TestDocs/docs/guides-basic/configuring-nlog-logging","docId":"guides-basic/configuring-nlog-logging"},{"type":"link","label":"Creating a Help File","href":"/TestDocs/docs/guides-basic/creating-a-help-file","docId":"guides-basic/creating-a-help-file"},{"type":"link","label":"Creating a Threaded Modal Dialog","href":"/TestDocs/docs/guides-basic/creating-a-threaded-modal-dialog","docId":"guides-basic/creating-a-threaded-modal-dialog"},{"type":"link","label":"Customizing Ribbons","href":"/TestDocs/docs/guides-basic/customizing-ribbons","docId":"guides-basic/customizing-ribbons"},{"type":"link","label":"Debugging Addins and Excel-DNA","href":"/TestDocs/docs/guides-basic/debugging-addins-and-exceldna","docId":"guides-basic/debugging-addins-and-exceldna"},{"type":"link","label":"Detecting Excel Shutdown and AutoClose","href":"/TestDocs/docs/guides-basic/detecting-excel-shutdown-and-autoclose","docId":"guides-basic/detecting-excel-shutdown-and-autoclose"},{"type":"link","label":"Dynamic Delegate Registration","href":"/TestDocs/docs/guides-basic/dynamic-delegate-registration","docId":"guides-basic/dynamic-delegate-registration"},{"type":"link","label":"Enumerating Excel COM Automation Collections","href":"/TestDocs/docs/guides-basic/enumerating-excel-com-automation-collections","docId":"guides-basic/enumerating-excel-com-automation-collections"},{"type":"link","label":"Excel-DNA Packing Tool","href":"/TestDocs/docs/guides-basic/exceldna-packing-tool","docId":"guides-basic/exceldna-packing-tool"},{"type":"link","label":"FSharp Standalone Assemblies","href":"/TestDocs/docs/guides-basic/fsharp-standalone-assemblies","docId":"guides-basic/fsharp-standalone-assemblies"},{"type":"link","label":"FSharp Type Inference","href":"/TestDocs/docs/guides-basic/fsharp-type-inference","docId":"guides-basic/fsharp-type-inference"},{"type":"link","label":"Installing Your Add-in","href":"/TestDocs/docs/guides-basic/installing-your-add-in","docId":"guides-basic/installing-your-add-in"},{"type":"link","label":"Integrating with VBA","href":"/TestDocs/docs/guides-basic/integrating-with-vba","docId":"guides-basic/integrating-with-vba"},{"type":"link","label":"Optional Parameters and Default Values","href":"/TestDocs/docs/guides-basic/optional-parameters-and-default-values","docId":"guides-basic/optional-parameters-and-default-values"},{"type":"link","label":"Performing Asynchronous Work","href":"/TestDocs/docs/guides-basic/performing-asynchronous-work","docId":"guides-basic/performing-asynchronous-work"},{"type":"link","label":"Reactive Extensions for Excel","href":"/TestDocs/docs/guides-basic/reactive-extensions-for-excel","docId":"guides-basic/reactive-extensions-for-excel"},{"type":"link","label":"Returning 1-D Arrays","href":"/TestDocs/docs/guides-basic/returning-1-d-arrays","docId":"guides-basic/returning-1-d-arrays"},{"type":"link","label":"User Settings and the .xll.config File","href":"/TestDocs/docs/guides-basic/user-settings-and-the-xllconfig-file","docId":"guides-basic/user-settings-and-the-xllconfig-file"},{"type":"link","label":"Utilising CustomXMLParts in Excel Workbooks","href":"/TestDocs/docs/guides-basic/utilising-customXMLparts-in-excel-workbooks","docId":"guides-basic/utilising-customXMLparts-in-excel-workbooks"}],"href":"/TestDocs/docs/category/guides---basic"},{"type":"category","label":"Guides - Advanced","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Temp Advanced Guide","href":"/TestDocs/docs/guides-advanced/tempadvancedguide","docId":"guides-advanced/tempadvancedguide"}],"href":"/TestDocs/docs/category/guides---advanced"},{"type":"category","label":"Archive","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/TestDocs/docs/archive/overview","docId":"archive/overview"},{"type":"link","label":"What and why - An introduction to .NET and Excel-DNA","href":"/TestDocs/docs/archive/what-and-why-an-introduction-to-net-and-excel-dna","docId":"archive/what-and-why-an-introduction-to-net-and-excel-dna"},{"type":"link","label":"Getting Started with Excel-DNA","href":"/TestDocs/docs/archive/getting-started","docId":"archive/getting-started"},{"type":"link","label":"Excel-DNA Performance","href":"/TestDocs/docs/archive/exceldna-performance","docId":"archive/exceldna-performance"}],"href":"/TestDocs/docs/category/archive"}]},"docs":{"archive/exceldna-performance":{"id":"archive/exceldna-performance","title":"Excel-DNA Performance","description":"With Excel-DNA you can create high-performance UDFs by using a restricted set of types, and taking responsibility for ensuring that exceptions are not leaked. Otherwise, ExcelDna is designed be flexible and make it easy to expose your functions safely - these extensions perform well but are not tuned for high-performance interop.","sidebar":"tutorialSidebar"},"archive/getting-started":{"id":"archive/getting-started","title":"Getting Started with Excel-DNA","description":"Do this first:","sidebar":"tutorialSidebar"},"archive/overview":{"id":"archive/overview","title":"Overview","description":"- The core library project can be found on GitHub, where the latest source versions are hosted.","sidebar":"tutorialSidebar"},"archive/what-and-why-an-introduction-to-net-and-excel-dna":{"id":"archive/what-and-why-an-introduction-to-net-and-excel-dna","title":"What and why - An introduction to .NET and Excel-DNA","description":"Microsoft publishes a Software Development Kit (SDK) for Excel, that describes how to make an \'Excel add-in\'. These are similar to .xla add-ins, but the code would typically be written in C or C++, and is compiled to binary file with a .xll extension. Such an Excel add-in is typically called an \\".xll\\". Internally, it is just a normal Windows .dll file with a few pre-arranged exports so that Excel and the add-in can hook up.","sidebar":"tutorialSidebar"},"getting-started/configuration":{"id":"getting-started/configuration","title":"Configuration","description":"","sidebar":"tutorialSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"","sidebar":"tutorialSidebar"},"guides-advanced/tempadvancedguide":{"id":"guides-advanced/tempadvancedguide","title":"Temp Advanced Guide","description":"","sidebar":"tutorialSidebar"},"guides-basic/accepting-range-parameters-in-udfs":{"id":"guides-basic/accepting-range-parameters-in-udfs","title":"Accepting Range Parameters in UDFs","description":"Parameters with the type of Excel\'s Range COM object are not directly supported by Excel-DNA.  There is a list of allowed parameter types here: Reference for data types in UDFs","sidebar":"tutorialSidebar"},"guides-basic/adding-keyboard-shortcut":{"id":"guides-basic/adding-keyboard-shortcut","title":"Adding a Keyboard Shortcut","description":"You can register a shortcut key for your macro in your AutoOpen.","sidebar":"tutorialSidebar"},"guides-basic/async-macro-example-formatting-the-calling-cell-from-a-udf":{"id":"guides-basic/async-macro-example-formatting-the-calling-cell-from-a-udf","title":"Async Macro Example","description":"We define a function that schedules a macro call to update the format of the calling range.","sidebar":"tutorialSidebar"},"guides-basic/asynchronous-functions":{"id":"guides-basic/asynchronous-functions","title":"Asynchronous Functions","description":"Excel-DNA now has a core implementation to support asynchronous functions. In a future version we might improve the ease of use.","sidebar":"tutorialSidebar"},"guides-basic/asynchronous-functions-with-tasks":{"id":"guides-basic/asynchronous-functions-with-tasks","title":"Asynchronous Functions with Tasks","description":"This example shows how to implement an asynchronous Excel function in VB.NET using the .NET 4 Task class. This has an advantage over the ExcelAsyncUtil.Run method, which just runs the code on a ThreadPool thread. If we are able to use the .NET 4 Task class, the outstanding requests will not block any threads, so should scale better. Supporting .NET 4 Tasks also allow us to use the .NET 4.5 Async/Await language extensions.","sidebar":"tutorialSidebar"},"guides-basic/checking-and-downloading-updates-in-dotnet":{"id":"guides-basic/checking-and-downloading-updates-in-dotnet","title":"Checking and Downloading Updates in .NET","description":"Following is a simple method to check for available updates of Add-ins/Programs:","sidebar":"tutorialSidebar"},"guides-basic/com-server-support":{"id":"guides-basic/com-server-support","title":"COM Server Support","description":"Functions and macros created in an Excel-DNA add-in can be called directly from Excel VBA by using Application.Run(...). However, .NET also supports creating rich object models that are exported as COM libraries, which can be Tools->Referenced in VBA. Excel-DNA has some advanced support to host COM-exported objects from Excel-DNA add-ins, giving some advantages over the regular .NET \u2018Register for COM interop\u2019 hosting approach:","sidebar":"tutorialSidebar"},"guides-basic/configuring-nlog-logging":{"id":"guides-basic/configuring-nlog-logging","title":"Configuring NLog Logging","description":"This is a guide to setting up logging from within your Excel-DNA add-in, using the NLog library. I used Visual Studio 2012 and C# to put together the example, but nothing here should be specific to the particular versions or language used.","sidebar":"tutorialSidebar"},"guides-basic/creating-a-help-file":{"id":"guides-basic/creating-a-help-file","title":"Creating a Help File","description":"With the HelpTopic property of the ExcelFunction attribute, you can add a pointer to a topic in a .chm help file, or a url with more detailed information.","sidebar":"tutorialSidebar"},"guides-basic/creating-a-threaded-modal-dialog":{"id":"guides-basic/creating-a-threaded-modal-dialog","title":"Creating a Threaded Modal Dialog","description":"","sidebar":"tutorialSidebar"},"guides-basic/customizing-ribbons":{"id":"guides-basic/customizing-ribbons","title":"Customizing Ribbons","description":"Setting Ribbon Properties","sidebar":"tutorialSidebar"},"guides-basic/debugging-addins-and-exceldna":{"id":"guides-basic/debugging-addins-and-exceldna","title":"Debugging Addins and Excel-DNA","description":"Debugging user code in your add-in","sidebar":"tutorialSidebar"},"guides-basic/detecting-excel-shutdown-and-autoclose":{"id":"guides-basic/detecting-excel-shutdown-and-autoclose","title":"Detecting Excel Shutdown and AutoClose","description":"This is a short note on the IExcelAddIn.AutoClose() callback, noting that it is not called when Excel is shut down, and explaining how the implementation came about.","sidebar":"tutorialSidebar"},"guides-basic/dynamic-delegate-registration":{"id":"guides-basic/dynamic-delegate-registration","title":"Dynamic Delegate Registration","description":"In come cases one might want to implement some kind of function wrapper or transformation at runtime. E.g. automatically wrapping and registering async Task / Rx functions.","sidebar":"tutorialSidebar"},"guides-basic/enumerating-excel-com-automation-collections":{"id":"guides-basic/enumerating-excel-com-automation-collections","title":"Enumerating Excel COM Automation Collections","description":"When referencing COM Automation collections late-bound, the enumeration via For Each does not automatically work. An explicitly cast or set to a variable of type IEnumerable will work, though:","sidebar":"tutorialSidebar"},"guides-basic/excel-programming-interfaces/excel-c-api":{"id":"guides-basic/excel-programming-interfaces/excel-c-api","title":"Excel C API","description":"The Excel C API was first introduced in Excel \'95 and has continuously evolved with new versions of Excel. Excel-DNA uses the C API to integrate with Excel, though Excel-DNA add-in can also use the COM Automation interfaces where needed.","sidebar":"tutorialSidebar"},"guides-basic/excel-programming-interfaces/introduction":{"id":"guides-basic/excel-programming-interfaces/introduction","title":"Introduction","description":"Excel supports two completely different programming interfaces:","sidebar":"tutorialSidebar"},"guides-basic/excel-programming-interfaces/using-the-excel-com-automation-interfaces":{"id":"guides-basic/excel-programming-interfaces/using-the-excel-com-automation-interfaces","title":"Using the Excel COM Automation Interfaces","description":"Summary","sidebar":"tutorialSidebar"},"guides-basic/exceldna-packing-tool":{"id":"guides-basic/exceldna-packing-tool","title":"Excel-DNA Packing Tool","description":"Excel-DNA has a packing tool that allows you to create a single-file .xll add-in.","sidebar":"tutorialSidebar"},"guides-basic/fsharp-standalone-assemblies":{"id":"guides-basic/fsharp-standalone-assemblies","title":"FSharp Standalone Assemblies","description":"F# assemblies can be compiled with a -standalone switch that embeds the F# runtime into the assembly, and allows it to run without requiring additional assemblies.","sidebar":"tutorialSidebar"},"guides-basic/fsharp-type-inference":{"id":"guides-basic/fsharp-type-inference","title":"FSharp Type Inference","description":"When creating UDFs with F#, the flexible type inference might lead to function signatures that are not supported by Excel-DNA, or lead to unexpected results.","sidebar":"tutorialSidebar"},"guides-basic/installing-your-add-in":{"id":"guides-basic/installing-your-add-in","title":"Installing Your Add-in","description":"Ease of deployment is one of the great advantages of making your Excel add-ins using Excel-DNA. This page provides some notes on the different approaches to installing your add-in.","sidebar":"tutorialSidebar"},"guides-basic/integrating-with-vba":{"id":"guides-basic/integrating-with-vba","title":"Integrating with VBA","description":"Excel-DNA can make it easy to call between .Net and VBA. This means existing VBA code need not be rewritten. And end users are likely to find VBA much easier to develop in.","sidebar":"tutorialSidebar"},"guides-basic/optional-parameters-and-default-values":{"id":"guides-basic/optional-parameters-and-default-values","title":"Optional Parameters and Default Values","description":"Update//github.com/Excel-DNA/Registration. I leave the documentation below as applying to the core Excel-DNA library. _","sidebar":"tutorialSidebar"},"guides-basic/performing-asynchronous-work":{"id":"guides-basic/performing-asynchronous-work","title":"Performing Asynchronous Work","description":"It is important to only communicate with Excel when it is Ready. For example, if one displays a non modal dialog then the program may fail if it attempts to call a VBA routine in response to a button press while the user is also in the process of editing a cell. Intercepting Window Messages messages etc. can also produce errors even though they are on the main thread. And of course accessing Excel from a different thread is forbidden.","sidebar":"tutorialSidebar"},"guides-basic/reactive-extensions-for-excel":{"id":"guides-basic/reactive-extensions-for-excel","title":"Reactive Extensions for Excel","description":"Excel-DNA has support for integrating the Reactive Extensions library (Rx) with Excel via RTD.","sidebar":"tutorialSidebar"},"guides-basic/returning-1-d-arrays":{"id":"guides-basic/returning-1-d-arrays","title":"Returning 1-D Arrays","description":"By default, ExcelDna marshalls object[] (a 1D array) back to Excel as a 1 row, many column result.","sidebar":"tutorialSidebar"},"guides-basic/user-settings-and-the-xllconfig-file":{"id":"guides-basic/user-settings-and-the-xllconfig-file","title":"User Settings and the .xll.config File","description":"Basic Usage","sidebar":"tutorialSidebar"},"guides-basic/utilising-customXMLparts-in-excel-workbooks":{"id":"guides-basic/utilising-customXMLparts-in-excel-workbooks","title":"Utilising CustomXMLParts in Excel Workbooks","description":"After struggling with the limitations of custom docproperties (being generally much too short), I decided to focus on a technology that was introduced with Office 2007:","sidebar":"tutorialSidebar"},"introduction":{"id":"introduction","title":"Introduction","description":"Migrating to .NET 6 from .NET 4","sidebar":"tutorialSidebar"}}}')}}]);