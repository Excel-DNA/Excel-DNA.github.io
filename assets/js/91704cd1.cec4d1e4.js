"use strict";(self.webpackChunkexcel_dna=self.webpackChunkexcel_dna||[]).push([[1918],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=i.createContext({}),d=function(e){var n=i.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=d(e.components);return i.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},s=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=d(t),f=r,x=s["".concat(c,".").concat(f)]||s[f]||p[f]||a;return t?i.createElement(x,o(o({ref:n},u),{},{components:t})):i.createElement(x,o({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=s;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var d=2;d<a;d++)o[d]=t[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}s.displayName="MDXCreateElement"},1557:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var i=t(7462),r=(t(7294),t(3905));const a={},o=void 0,l={unversionedId:"archive/wiki/Build-Output-Customization",id:"archive/wiki/Build-Output-Customization",title:"Build-Output-Customization",description:"When the ExcelDna.AddIn NuGet package is installed into a project, some additional MSBuild targets are defined. These are used to copy the required .xll native add-in into the output directory, and create single-file packed versions of the add-in.",source:"@site/docs/archive/wiki/Build-Output-Customization.md",sourceDirName:"archive/wiki",slug:"/archive/wiki/Build-Output-Customization",permalink:"/Website/docs/archive/wiki/Build-Output-Customization",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Async-Notes",permalink:"/Website/docs/archive/wiki/Async-Notes"},next:{title:"COM-exports-for-VBA-access",permalink:"/Website/docs/archive/wiki/COM-exports-for-VBA-access"}},c={},d=[],u={toc:d};function p(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"When the ",(0,r.kt)("inlineCode",{parentName:"p"},"ExcelDna.AddIn")," NuGet package is installed into a project, some additional MSBuild targets are defined. These are used to copy the required ",(0,r.kt)("inlineCode",{parentName:"p"},".xll")," native add-in into the output directory, and create single-file packed versions of the add-in."),(0,r.kt)("p",null,"Installing the package will add a file called ",(0,r.kt)("inlineCode",{parentName:"p"},"Properties\\ExcelDna.Build.props")," into the project. This file can be used for basic customization of the additional build steps. ",(0,r.kt)("inlineCode",{parentName:"p"},"ExcelDna.Build.props")," allows the following build properties to be configured:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"  \x3c!--\n    Configuration properties for building .dna files\n  --\x3e\n  <PropertyGroup>\n    \x3c!--\n      Enable/Disable automatic generation of platform-specific versions of .dna files\n    --\x3e\n    <ExcelDnaCreate32BitAddIn Condition=\"'$(ExcelDnaCreate32BitAddIn)' == ''\">true</ExcelDnaCreate32BitAddIn>\n    <ExcelDnaCreate64BitAddIn Condition=\"'$(ExcelDnaCreate64BitAddIn)' == ''\">true</ExcelDnaCreate64BitAddIn>\n\n    \x3c!--\n      Define the suffix used for each platform-specific file e.g. MyAddIn64.dna\n    --\x3e\n    <ExcelDna32BitAddInSuffix Condition=\"'$(ExcelDna32BitAddInSuffix)' == ''\"></ExcelDna32BitAddInSuffix>\n    <ExcelDna64BitAddInSuffix Condition=\"'$(ExcelDna64BitAddInSuffix)' == ''\">64</ExcelDna64BitAddInSuffix>\n  </PropertyGroup>\n\n  \x3c!--\n    Configuration properties for packing .dna files\n  --\x3e\n  <PropertyGroup>\n    \x3c!--\n      Enable/Disable packing of .dna files\n    --\x3e\n    <RunExcelDnaPack Condition=\"'$(RunExcelDnaPack)' == ''\">true</RunExcelDnaPack>\n\n    \x3c!--\n      Suffix used for packed .xll files e.g. MyAddIn-packed.xll\n    --\x3e\n    <ExcelDnaPackXllSuffix Condition=\"'$(ExcelDnaPackXllSuffix)' == ''\">-packed</ExcelDnaPackXllSuffix>\n  </PropertyGroup>\n")))}p.isMDXComponent=!0}}]);