"use strict";(self.webpackChunkexcel_dna=self.webpackChunkexcel_dna||[]).push([[7705],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(r),m=o,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return r?n.createElement(f,a(a({ref:t},s),{},{components:r})):n.createElement(f,a({ref:t},s))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7844:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const i={title:"Building Excel-DNA From Source"},a=void 0,l={unversionedId:"archive/guides/building-excedna-from-source",id:"archive/guides/building-excedna-from-source",title:"Building Excel-DNA From Source",description:"To build Excel-DNA from source, create a single  directory first.",source:"@site/docs/archive/guides/building-excedna-from-source.md",sourceDirName:"archive/guides",slug:"/archive/guides/building-excedna-from-source",permalink:"/docs/archive/guides/building-excedna-from-source",draft:!1,tags:[],version:"current",frontMatter:{title:"Building Excel-DNA From Source"},sidebar:"tutorialSidebar",previous:{title:"Asynchronous Functions with Tasks",permalink:"/docs/archive/guides/asynchronous-functions-with-tasks"},next:{title:"Checking and Downloading Updates in .NET",permalink:"/docs/archive/guides/checking-and-downloading-updates-in-dotnet"}},c={},u=[],s={toc:u};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"To build Excel-DNA from source, create a single <root",">"," directory first.  "),(0,o.kt)("p",null,"Build Requirement: Visual Studio 2022 Community or Professional with C++ and .NET Desktop development support, set the path to MSBuild.exe in <root",">","\\ExcelDna\\MasterBuild\\MasterBuild.cmd:  "),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},'set MSBuildPath="C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Msbuild\\Current\\Bin\\amd64\\MSBuild.exe"')),(0,o.kt)("p",null,"You have to clone the following repositories into the <root",">"," directory:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Excel-DNA/ExcelDna"},"ExcelDna")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Excel-DNA/IntelliSense"},"IntelliSense")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Excel-DNA/Registration"},"Registration")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Excel-DNA/ExcelDnaDoc"},"ExcelDnaDoc"))),(0,o.kt)("p",null,"As the DeveloperTools\\ExcelDna.Testing folder is not part of the public available codebase, comment this last part of the MasterBuild.cmd script:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cd %rootPath%\\DeveloperTools\\ExcelDna.Testing\\Build\ncopy /Y %targetsfile% %rootPath%\\DeveloperTools\\ExcelDna.Testing\\Directory.Build.targets\ncall BuildPackages.bat %PackageVersion% %MSBuildPath%\n")),(0,o.kt)("p",null,"Then, run the MasterBuild.cmd script."))}p.isMDXComponent=!0}}]);