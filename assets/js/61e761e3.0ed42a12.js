"use strict";(self.webpackChunkexcel_dna=self.webpackChunkexcel_dna||[]).push([[4325],{3905:(e,t,i)=>{i.d(t,{Zo:()=>p,kt:()=>g});var n=i(7294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(i),g=r,h=u["".concat(s,".").concat(g)]||u[g]||d[g]||a;return i?n.createElement(h,o(o({ref:t},p),{},{components:i})):n.createElement(h,o({ref:t},p))}));function g(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=i.length,o=new Array(a);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<a;c++)o[c]=i[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}u.displayName="MDXCreateElement"},1903:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=i(7462),r=(i(7294),i(3905));const a={},o=void 0,l={unversionedId:"archive/wiki/Method-Registration",id:"archive/wiki/Method-Registration",title:"Method-Registration",description:"Introduction",source:"@site/docs/archive/wiki/Method-Registration.md",sourceDirName:"archive/wiki",slug:"/archive/wiki/Method-Registration",permalink:"/docs/archive/wiki/Method-Registration",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Links-about-RefEdit",permalink:"/docs/archive/wiki/Links-about-RefEdit"},next:{title:"NuGet-Packages",permalink:"/docs/archive/wiki/NuGet-Packages"}},s={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Registration",id:"registration",level:2},{value:"Default registration",id:"default-registration",level:3},{value:"ExplicitExports",id:"explicitexports",level:4},{value:"ExplicitRegistration option",id:"explicitregistration-option",level:3},{value:"Dynamic registration with <code>ExcelIntegration.RegisterDelegates</code>",id:"dynamic-registration-with-excelintegrationregisterdelegates",level:3},{value:"Registration Logging",id:"registration-logging",level:2}],p={toc:c};function d(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Excel-DNA examines libraries specified in the .dna configuration file by Reflection, and registers appropriate methods with Excel using the ",(0,r.kt)("inlineCode",{parentName:"p"},"xlfRegister")," C API call. The page describes the default registration processing, trouble-shooting and options for customization in the add-in."),(0,r.kt)("h2",{id:"registration"},"Registration"),(0,r.kt)("h3",{id:"default-registration"},"Default registration"),(0,r.kt)("p",null,"By default, Excel-DNA will attempt to register all 'public static' functions that have compatible signatures, for all the assemblies listed as <ExternalLibrary....",">"," in your .dna file."),(0,r.kt)("p",null,"There are two optional attributes that you can put into the .dna file that control the registration:"),(0,r.kt)("h4",{id:"explicitexports"},"ExplicitExports"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If you only want to register the functions explicitly marked with either an ExcelFunction or ExcelCommand attribute, you can add an ExplicitExports='true' tag in the .dna file:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'    <ExternalLibrary Path="MyFunctions.dll" Pack="true" ExplicitExports="true" />\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This attribute is valid in ",(0,r.kt)("inlineCode",{parentName:"li"},"Project")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"ExternalLibrary")," tags in the .dna file.")),(0,r.kt)("h3",{id:"explicitregistration-option"},"ExplicitRegistration option"),(0,r.kt)("p",null,"If your add-in is going to do the registration explicitly (e.g. if you are using the Registration extension library) then you can add the ",(0,r.kt)("inlineCode",{parentName:"p"},"ExplicitRegistration='true'")," tag in the .dna file.\nIn this case Excel-DNA will not register any function automatically, and your add-in can do the registration by calling ",(0,r.kt)("inlineCode",{parentName:"p"},"ExcelIntegration.RegisterDelegates(...)"),"."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ExplicitRegistration")," option allows specific methods or libraries to opt out of the default registration processing. Such methods and libraries have to 'explicitly register' by calling one of the ",(0,r.kt)("inlineCode",{parentName:"p"},"ExcelIntegration.RegisterXXX")," methods. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Valid on ",(0,r.kt)("inlineCode",{parentName:"p"},"ExcelFunctionAttribute")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ExcelCommandAttribute"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Valid in ",(0,r.kt)("inlineCode",{parentName:"p"},"Project")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ExternalLibrary")," tags in the .dna file.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"When ",(0,r.kt)("inlineCode",{parentName:"p"},"ExcelIntegration.RegisterMethods")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"ExcelIntegration.RegisterDelegates")," is called, the flag is removed from any attributes passed in before further processing."))),(0,r.kt)("h3",{id:"dynamic-registration-with-excelintegrationregisterdelegates"},"Dynamic registration with ",(0,r.kt)("inlineCode",{parentName:"h3"},"ExcelIntegration.RegisterDelegates")),(0,r.kt)("p",null,"There is an Excel-DNA extension library that does custom method pre-processing and registration - see the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Excel-DNA/Registration"},"ExcelDna.Registration")," project."),(0,r.kt)("h2",{id:"registration-logging"},"Registration Logging"),(0,r.kt)("p",null,"..."))}d.isMDXComponent=!0}}]);